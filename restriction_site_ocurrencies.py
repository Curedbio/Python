# coding: utf-8
#
#
#        ██████╗██╗   ██╗██████╗ ███████╗██████╗    ██████╗ ██╗ ██████╗
#       ██╔════╝██║   ██║██╔══██╗██╔════╝██╔══██╗   ██╔══██╗██║██╔═══██╗
#       ██║     ██║   ██║██████╔╝█████╗  ██║  ██║   ██████╔╝██║██║   ██║
#       ██║     ██║   ██║██╔══██╗██╔══╝  ██║  ██║   ██╔══██╗██║██║   ██║
#       ╚██████╗╚██████╔╝██║  ██║███████╗██████╔╝██╗██████╔╝██║╚██████╔╝
#       ╚═════╝ ╚═════╝ ╚═╝  ╚═╝╚══════╝╚═════╝ ╚═╝╚═════╝ ╚═╝ ╚═════╝
#
#
#
#
# Using Python for basic DNA manipulation
# This exercise searchs enzimatic sites inside a sequence and prints its position
#
# Using as example Homo sapiens beta-globin (HBB) gene, complete cds (GenBank: KU350152.1)
#
#
#
#
#
#

from string import *

dna = """ATTCTGGAGACGCAGGAAGAGATCCATCTACATATCCCAAAGCTGAATTATGGTAGACAAAACTCTTCCA
CTTTTAGTGCATCAACTTCTTATTTGTGTAATAAGAAAATTGGGAAAACGATCTTCAATATGCTTACCAA
GCTGTGATTCCAAATATTACGTAAATACACTTGCAAAGGAGGATGTTTTTAGTAGCAATTTGTACTGATG
GTATGGGGCCAAGAGATATATCTTAGAGGGAGGGCTGAGGGTTTGAAGTCCAACTCCTAAGCCAGTGCCA
GAAGAGCCAAGGACAGGTACGGCTGTCATCACTTAGACCTCACCCTGTGGAGCCACACCCTAGGGTTGGC
CAATCTACTCCCAGGAGCAGGGAGGGCAGGAGCGAGGGCTGGGCATAAAAGTCAGGGCAGAGCCATCTAT
TGCTTACATTTGCTTCTGACACAACTGTGTTCACTAGCAACCTCAAACAGACACCATGGTGCATCTGACT
CCTGAGGAGAAGTCTGCCGTTACTGCCCTGTGGGGCAAGGTGAACGTGGATGAAGTTGGTGGTGAGGCCC
TGGGCAGGTTGGTATCAAGGTTACAAGACAGGTTTAAGGAGACCAATAGAAACTGGGCATGTGGAGACAG
AGAAGACTCTTGGGTTTCTGATAGGCACTGACTCTCTCTGCCTATTGGTCTATTTTCCCACCCTTAGGCT
GCTGGTGGTCTACCCTTGGACCCAGAGGTTCTTTGAGTCCTTTGGGGATCTGTCCACTCCTGATGCTGTT
ATGGGCAACCCTAAGGTGAAGGCTCATGGCAAGAAAGTGCTCGGTGCCTTTAGTGATGGCCTGGCTCACC
TGGACAACCTCAAGGGCACCTTTGCCACACTGAGTGAGCTGCACTGTGACAAGCTGCACGTGGATCCTGA
GAACTTCAGGGTGAGTCTATGGGACGCTTGATGTTTTCTTTCCCCTTCTTTTCTATGGTTAAGTTCATGT
CATAGGAAGGGGATAAGTAACAGGGTACAGTTTAGAATGGGAAACAGACGAATGATTGCATCAGTGTGGA
AGTCTCAGGATCGTTTTAGTTTCTTTTATTTGCTGTTCATAACAATTGTTTTCTTTTGTTTAATTCTTGC
TTTCTTTTTTTTTCTTCTCCGCAATTTTTACTATTATACTTAATGCCTTAACATTGTGTATAACAAAAGG
AAATATCTCTGAGATACATTAAGTAACTTAAAAAAAAACTTTACACAGTCTGCCTAGTACATTACTATTT
GGAATATATGTGTGCTTATTTGCATATTCATAATCTCCCTACTTTATTTTCTTTTATTTTTAATTGATAC
ATAATCATTATACATATTTATGGGTTAAAGTGTAATGTTTTAATATGTGTACACATATTGACCAAATCAG
GGTAATTTTGCATTTGTAATTTTAAAAAATGCTTTCTTCTTTTAATATACTTTTTTGTTTATCTTATTTC
TAATACTTTCCCTAATCTCTTTCTTTCAGGGCAATAATGATACAATGTATCATGCCTCTTTGCACCATTC
TAAAGAATAACAGTGATAATTTCTGGGTTAAGGCAATAGCAATATCTCTGCATATAAATATTTCTGCATA
TAAATTGTAACTGATGTAAGAGGTTTCATATTGCTAATAGCAGCTACAATCCAGCTACCATTCTGCTTTT
ATTTTATGGTTGGGATAAGGCTGGATTATTCTGAGTCCAAGCTAGGCCCTTTTGCTAATCATGTTCATAC
CTCTTATCTTCCTCCCACAGCTCCTGGGCAACGTGCTGGTCTGTGTGCTGGCCCATCACTTTGGCAAAGA
ATTCACCCCACCAGTGCAGGCTGCCTATCAGAAAGTGGTGGCTGGTGTGGCTAATGCCCTGGCCCACAAG
TATCACTAAGCTCGCTTTCTTGCTGTCCAATTTCTATTAAAGGTTCCTTTGTTCCCTAAGTCCAACTACT
AAACTGGGGGATATTATGAAGGGCCTTGAGCATCTGGATTCTGCCTAATAAAAAACATTTATTTTCATTG
C"""


# define enzyme array ([name], [seq])
enz = [['EcoRI','BamHI','HindIII'], ['GAATT','GGATC','AAGCT']]
dntp = [['A','T','C','G'], ['131.2','304.2','289.2','329.2']]
#dntp = {'A':131.2,:304.2,'T':289.2,'G':329.2}

#count restrictrion sites
for seq in range(len(enz[1])):
    count = dna.count(enz[1][seq])

    print "There are", count, "restriction sites for enzyme" , enz[0][seq]

#search position sites inside sequence
    total = (int(count))
    hit = 0
    molw = 0
    site = dna.find(enz[1][seq])
    while hit != total:

        print "Restriction site at position %d" % (site)
        site = find(dna, enz[1][seq], site + 1)
        hit = hit + 1
        if hit == total:
            print ('\r')
